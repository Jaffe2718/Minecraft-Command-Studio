package github.jaffe2718.mccs.jfx.unit.prompt;

import com.theokanning.openai.completion.CompletionRequest;
import com.theokanning.openai.service.OpenAiService;
import github.jaffe2718.mccs.config.MccsConfig;
import github.jaffe2718.mccs.jfx.unit.widget.PopupFactory;
import javafx.stage.Popup;
import org.fxmisc.richtext.CodeArea;

/**
 * Used to add a command prompt to a CodeArea.<br>
 * Generated by OpenAI's API<br>
 * Don't extend this class<br>
 * Just use the static methods<br>
 * */
public abstract class AISuggestionsRegister {

    /**
     * If this is true, the program will not call the API to generate the prompt, to avoid the abuse of the API Key
     * */
    public static boolean isShowing = false;

    /**
     * Add a command prompt to the target codeArea
     * the command prompt is generated by OpenAI's API
     * When the user press the key "Alt+F3", start generating the prompt
     * The API Key is from {@link github.jaffe2718.mccs.config.MccsConfig#openaiApiKey}
     * Once the user first press down the key "Alt+F3", start generating the prompt one time
     * But while "Alt+F3" is pressed, do nothing, to avoid the abuse of the API Key
     * @see github.jaffe2718.mccs.jfx.unit.prompt.AISuggestionsRegister#isShowing
     * */
    public static void addAISuggestionsTo(CodeArea target) {
        target.onKeyPressedProperty().set(
            event -> {
                if (!isShowing && event.isAltDown() && event.getCode().toString().equals("F3")) {
                    // get the row of text that the cursor is on, from the start of the row to the cursor
                    String rowText = target.getText(target.getCurrentParagraph(), 0, target.getCurrentParagraph(), target.getCaretColumn());
                    Popup aiPromptPopup = PopupFactory.createAIPopup(rowText);      // create a popup to show the ai suggestions
                    target.getCaretBounds().ifPresent(
                        bounds -> {
                            AISuggestionsRegister.isShowing = true;
                            aiPromptPopup.show(target.getScene().getWindow(), bounds.getMaxX(), bounds.getMaxY());
                        }
                    );
                }
            }
        );
    }
}
